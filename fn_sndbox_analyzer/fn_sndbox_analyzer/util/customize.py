# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_sndbox_analyzer"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_sndbox_analyzer package"""
    reload_params = {"package": u"fn_sndbox_analyzer",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"artifact_id", u"attachment_id", u"incident_id", u"sndbox_analysis_report_status"], 
                    "datatables": [], 
                    "message_destinations": [u"sndbox_sandbox_message_destination"], 
                    "functions": [u"fn_sndbox_sandbox_analyzer"], 
                    "phases": [u"Detect/Analyze"], 
                    "automatic_tasks": [u"sandbox_malware_infected_systems"], 
                    "scripts": [], 
                    "workflows": [u"example_sndbox_sandbox_analyzer_artifact", u"example_sndbox_sandbox_analyzer_attachment"], 
                    "actions": [u"Example: SNDBOX Sandbox Analyzer [Artifact]", u"Example: SNDBOX Sandbox Analyzer [Attachment]"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     artifact_id
    #     attachment_id
    #     incident_id
    #     sndbox_analysis_report_status
    #   Message Destinations:
    #     sndbox_sandbox_message_destination
    #   Functions:
    #     fn_sndbox_sandbox_analyzer
    #   Phases:
    #     Detect/Analyze
    #   Tasks:
    #     sandbox_malware_infected_systems
    #   Workflows:
    #     example_sndbox_sandbox_analyzer_artifact
    #     example_sndbox_sandbox_analyzer_attachment
    #   Rules:
    #     Example: SNDBOX Sandbox Analyzer [Artifact]
    #     Example: SNDBOX Sandbox Analyzer [Attachment]


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ1dWlkIjogIjMyMTRlZmJkLTZjZTgt
NDAwNy05ZDQ0LTE1MDkwYjkxYTljMiIsICJkZXNjcmlwdGlvbiI6ICJUaGlzIHdvcmtmbG93IHRh
a2VzIGFuIGFydGlmYWN0IGZpbGUgYXMgaW5wdXQgYW5kIGNhbGxzIHRoZSBTTkRCT1ggU2FuZGJv
eCBwbGF0Zm9ybSBmdW5jdGlvbiB0byBkZXRlcm1pbmUgaWYgdGhlIGZpbGUgY29udGFpbnMgbWFs
d2FyZS4gIFRoZSBhbmFseXNpcyByZXN1bHQgaXMgcmV0dXJuZWQgaW4gYW4gaW5jaWRlbnQgbm90
ZS4iLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAiZXhwb3J0X2tleSI6ICJleGFtcGxlX3Nu
ZGJveF9zYW5kYm94X2FuYWx5emVyX2FydGlmYWN0IiwgIndvcmtmbG93X2lkIjogMywgImxhc3Rf
bW9kaWZpZWRfYnkiOiAidG9tZXJAc25kYm94LmNvbSIsICJjb250ZW50IjogeyJ4bWwiOiAiPD94
bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5z
PVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJw
bW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpv
bWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21n
ZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2ls
aWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9y
Zy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cu
Y2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhhbXBsZV9zbmRib3hfc2FuZGJveF9h
bmFseXplcl9hcnRpZmFjdFwiIGlzRXhlY3V0YWJsZT1cInRydWVcIiBuYW1lPVwiRXhhbXBsZTog
U05EQk9YIFNhbmRib3ggQW5hbHl6ZXIgW0FydGlmYWN0XVwiPjxkb2N1bWVudGF0aW9uPlRoaXMg
d29ya2Zsb3cgdGFrZXMgYW4gYXJ0aWZhY3QgZmlsZSBhcyBpbnB1dCBhbmQgY2FsbHMgdGhlIFNO
REJPWCBTYW5kYm94IHBsYXRmb3JtIGZ1bmN0aW9uIHRvIGRldGVybWluZSBpZiB0aGUgZmlsZSBj
b250YWlucyBtYWx3YXJlLiAgVGhlIGFuYWx5c2lzIHJlc3VsdCBpcyByZXR1cm5lZCBpbiBhbiBp
bmNpZGVudCBub3RlLjwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRf
MTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMW9qb2tjNjwvb3V0Z29pbmc+PC9zdGFy
dEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzA1c3pxcm5cIiBuYW1lPVwiU05E
Qk9YIFNhbmRib3ggQW5hbHl6ZXJcIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVu
c2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cImMxMWM0OWI4LWU1NzQtNDll
Ni04Mzk5LTVkNTFiZDZiYjJkMlwiPntcImlucHV0c1wiOnt9LFwicG9zdF9wcm9jZXNzaW5nX3Nj
cmlwdFwiOlwiZGVmIGZvbnRfY29sb3Ioc2NvcmUpOlxcbiAgICBjb2xvciA9IFxcXCJncmVlblxc
XCJcXG4gICAgdHJ5OlxcbiAgICAgICAgaWYgZmxvYXQoc2NvcmUpICZndDs9IDAuNTY6XFxuICAg
ICAgICAgICAgY29sb3IgPSBcXFwicmVkXFxcIlxcbiAgICBleGNlcHQ6XFxuICAgICAgICBwYXNz
XFxuICAgIHJldHVybiBjb2xvclxcblxcbmRlZiBzYW1wbGVfc2NvcmUoc2NvcmUpOlxcbiAgICBy
ZXR1cm4gcm91bmQoc2NvcmUgKiAxMDApIGlmIHNjb3JlIGVsc2UgMFxcblxcbmlmIG5vdCByZXN1
bHRzLnNuZGJveF9hbmFseXNpc19yZXBvcnRfc3RhdHVzOlxcbiAgICBub3RlVGV4dCA9IHVcXFwi
XFxcIlxcXCJTdWNjZXNzZnVsIHN1Ym1pdCAmbHQ7YiZndDt7fSZsdDsvYiZndDsgdG8gU05EQk9Y
IFBsYXRmb3JtLiBIb3dldmVyIGl0IHdpbGwgdGFrZSB0aW1lIHRvIGdlbmVyYXRlIGFuIGFuYWx5
c2lzIHJlcG9ydCwgcGxlYXNlIHN1Ym1pdCBpdCBhZ2FpbiBsYXRlci4gJmx0O2JyJmd0O1xcXCJc
XFwiXFxcIi5mb3JtYXQoXFxuICAgICAgICBhcnRpZmFjdC52YWx1ZSlcXG5cXG5lbHNlOlxcbiAg
ICBub3RlVGV4dCA9IHVcXFwiXFxcIlxcXCJTdWNjZXNzZnVsIHN1Ym1pdCAmbHQ7YiZndDt7fSZs
dDsvYiZndDsgdG8gU05EQk9YIFBsYXRmb3JtLiBDaGVjayB0aGUgcmVzdWx0cyBiZWxvdzogJmx0
O2JyJmd0O1xcXCJcXFwiXFxcIi5mb3JtYXQoXFxuICAgICAgICBhcnRpZmFjdC52YWx1ZSlcXG5c
XG4gICAgZm9yIHNhbXBsZSBpbiByZXN1bHRzLnNhbXBsZV9maW5hbF9yZXN1bHQ6XFxuICAgICAg
ICBub3RlVGV4dCArPSB1XFxcIlxcXCJcXFwiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cXFwiXFxcIlxcXCJcXG4g
ICAgICAgIGNvbG9yID0gZm9udF9jb2xvcihzYW1wbGVbXFxcInNhbXBsZV9yZXBvcnRcXFwiXVtc
XFwic2NvcmVcXFwiXSlcXG4gICAgICAgIG5vdGVUZXh0ICs9IHVcXFwiXFxcIlxcXCImbHQ7YnIm
Z3Q7U05EQk9YIFNhbmRib3ggQW5hbHlzaXM6ICZsdDtiJmd0O3tzYW1wbGVfZmlsZW5hbWV9Jmx0
Oy9iJmd0OyBjb21wbGV0ZS4mbHQ7YnImZ3Q7XFxuICAgICAgICAgICAgICAgICAgIFNOREJPWCBP
bmxpbmUgQXR0YWNobWVudDogJmx0O2EgaHJlZj17c2FtcGxlX29ubGluZV9yZXBvcnR9Jmd0O3tz
YW1wbGVfb25saW5lX3JlcG9ydH0mbHQ7L2EmZ3Q7Jmx0O2JyJmd0O1xcbiAgICAgICAgICAgICAg
ICAgICBTTkRCT1ggQW5hbHl6ZXIgcmVzdWx0OiAgU2NvcmU6ICZsdDtiIHN0eWxlPSBcXFwiY29s
b3I6e2NvbG9yfVxcXCImZ3Q7e3NhbXBsZV9zY29yZX0mbHQ7L2ImZ3Q7ICZsdDticiZndDtcXG4g
ICAgICAgICAgICAgICBcXFwiXFxcIlxcXCIuZm9ybWF0KHNhbXBsZV9maWxlbmFtZT1zYW1wbGVb
XFxcInNhbXBsZV9yZXBvcnRcXFwiXVtcXFwibmFtZVxcXCJdLFxcbiAgICAgICAgICAgICAgICAg
ICAgICAgICAgc2FtcGxlX29ubGluZV9yZXBvcnQ9c2FtcGxlW1xcXCJzYW1wbGVfcmVwb3J0XFxc
Il1bXFxcInNhbXBsZV91cmxcXFwiXSxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9y
PWNvbG9yLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc2FtcGxlX3Njb3JlPXNhbXBsZV9z
Y29yZShzYW1wbGVbXFxcInNhbXBsZV9yZXBvcnRcXFwiXVtcXFwic2NvcmVcXFwiXSkpXFxuXFxu
aW5jaWRlbnQuYWRkTm90ZShoZWxwZXIuY3JlYXRlUmljaFRleHQobm90ZVRleHQpKVwiLFwicHJl
X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMuaW5jaWRlbnRfaWQgPSBpbmNpZGVudC5pZFxc
bmlucHV0cy5hcnRpZmFjdF9pZCA9IGFydGlmYWN0LmlkXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+
PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzFvam9rYzY8L2luY29t
aW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMHk1bjVmYzwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFz
az48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzFvam9rYzZcIiBzb3VyY2VSZWY9XCJT
dGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18wNXN6cXJuXCIvPjxl
bmRFdmVudCBpZD1cIkVuZEV2ZW50XzBocmdiZTlcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzB5
NW41ZmM8L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxv
d18weTVuNWZjXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMDVzenFyblwiIHRhcmdldFJlZj1c
IkVuZEV2ZW50XzBocmdiZTlcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25f
MWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5v
dGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9
XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0
XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzE1cm5la2hcIj48dGV4dD48
IVtDREFUQVtSZXN1bHQgaXMgaW5jaWRlbnQgbm90ZSBpcyBjcmVhdGVkIGNvbnRhaW5pbmcgdGhl
IHJlc3VsdHMgb2YgYW5hbHlzaXNcbl1dPjwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lh
dGlvbiBpZD1cIkFzc29jaWF0aW9uXzBybXU4dGFcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18w
NXN6cXJuXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMTVybmVraFwiLz48dGV4dEFubm90
YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xbGg4b2s5XCI+PHRleHQ+PCFbQ0RBVEFbaW5wdXRz
OlxuMS4gaW5jaWRlbnRfaWQgKHJlcXVpcmVkKVxuMi4gYXJ0aWZhY3RfaWRcbjMuIGFuYWx5c2lz
X3JlcG9ydF9zdGF0dXMoXCJOb1wiIGJ5IGRlZmF1bHQpOiBcIlllc1wiIGZvciBhbmFseXNpcyBo
YXMgZmluaXNoZWQsIFwiTm9cIiBmb3IgYW5hbHlzaXMgaGFzIG5vdCBjb21wbGV0ZWQgeWV0Ll1d
PjwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFk
ZzQ1eXRcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wNXN6cXJuXCIgdGFyZ2V0UmVmPVwiVGV4
dEFubm90YXRpb25fMWxoOG9rOVwiLz48L3Byb2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1c
IkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5l
ZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0
YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJv
dW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMTYyXCIgeT1cIjE4OFwiLz48YnBt
bmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1c
IjE1N1wiIHk9XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48
YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIiBp
ZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMw
XCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48
YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIGlkPVwi
QXNzb2NpYXRpb25fMXNldWo0OF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTY5XCIgeHNpOnR5
cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMjBcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIxNTNcIiB4
c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBt
bmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNrXzA1c3pxcm5cIiBpZD1cIlNl
cnZpY2VUYXNrXzA1c3pxcm5fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9
XCIxMDBcIiB4PVwiMzE4XCIgeT1cIjE2NlwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpC
UE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xb2pva2M2XCIgaWQ9XCJTZXF1ZW5j
ZUZsb3dfMW9qb2tjNl9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTk4XCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIzMThcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjI1OFwiIHk9XCIxODRcIi8+PC9icG1u
ZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVt
ZW50PVwiRW5kRXZlbnRfMGhyZ2JlOVwiIGlkPVwiRW5kRXZlbnRfMGhyZ2JlOV9kaVwiPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjU4NFwiIHk9XCIxODhcIi8+
PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwi
IHg9XCI2MDJcIiB5PVwiMjI3XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hh
cGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18weTVuNWZjXCIg
aWQ9XCJTZXF1ZW5jZUZsb3dfMHk1bjVmY19kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNDE4XCIg
eHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI1
ODRcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJl
bD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjUwMVwiIHk9XCIx
ODRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNo
YXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMTVybmVraFwiIGlkPVwiVGV4dEFubm90
YXRpb25fMTVybmVraF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiNTFcIiB3aWR0aD1cIjM5
M1wiIHg9XCI0NjVcIiB5PVwiMzVcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVk
Z2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8wcm11OHRhXCIgaWQ9XCJBc3NvY2lhdGlvbl8w
cm11OHRhX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI0MThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjE4MVwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjYxMVwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiODZcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUg
YnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xbGg4b2s5XCIgaWQ9XCJUZXh0QW5ub3RhdGlv
bl8xbGg4b2s5X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxMTRcIiB3aWR0aD1cIjI3Mlwi
IHg9XCIxMjJcIiB5PVwiLTM4XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdl
IGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMWRnNDV5dFwiIGlkPVwiQXNzb2NpYXRpb25fMWRn
NDV5dF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMzQ0XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2lu
dFwiIHk9XCIxNjZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIyOTFcIiB4c2k6dHlwZT1cIm9tZ2Rj
OlBvaW50XCIgeT1cIjc2XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48
L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiIsICJ3b3JrZmxvd19pZCI6ICJleGFt
cGxlX3NuZGJveF9zYW5kYm94X2FuYWx5emVyX2FydGlmYWN0IiwgInZlcnNpb24iOiAxMX0sICJs
YXN0X21vZGlmaWVkX3RpbWUiOiAxNTYwODk4MjA1NTU4LCAiY3JlYXRvcl9pZCI6ICJ0b21lckBz
bmRib3guY29tIiwgImFjdGlvbnMiOiBbXSwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVf
c25kYm94X3NhbmRib3hfYW5hbHl6ZXJfYXJ0aWZhY3QiLCAibmFtZSI6ICJFeGFtcGxlOiBTTkRC
T1ggU2FuZGJveCBBbmFseXplciBbQXJ0aWZhY3RdIn0sIHsidXVpZCI6ICI4OGZhNGM2Yy0zMzI3
LTRjNDUtODY0Ni00MzMwZjg0ODlkZWIiLCAiZGVzY3JpcHRpb24iOiAiVGhpcyB3b3JrZmxvdyB0
YWtlcyBhbiBhdHRhY2htZW50IGZpbGUgYXMgaW5wdXQgYW5kIGNhbGxzIHRoZSBTTkRCT1ggcGxh
dGZvcm0gZnVuY3Rpb24gdG8gZGV0ZXJtaW5lIGlmIHRoZSBmaWxlIGNvbnRhaW5zIG1hbHdhcmUu
ICBUaGUgYW5hbHlzaXMgcmVzdWx0IGlzIHJldHVybmVkIGluIGFuIGluY2lkZW50IG5vdGUuIiwg
Im9iamVjdF90eXBlIjogImF0dGFjaG1lbnQiLCAiZXhwb3J0X2tleSI6ICJleGFtcGxlX3NuZGJv
eF9zYW5kYm94X2FuYWx5emVyX2F0dGFjaG1lbnQiLCAid29ya2Zsb3dfaWQiOiA0LCAibGFzdF9t
b2RpZmllZF9ieSI6ICJ0b21lckBzbmRib3guY29tIiwgImNvbnRlbnQiOiB7InhtbCI6ICI8P3ht
bCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9
XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBt
bmRpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9t
Z2RjPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdk
aT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxp
ZW50PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8v
d3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3Jn
LzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5j
YW11bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJleGFtcGxlX3NuZGJveF9zYW5kYm94X2Fu
YWx5emVyX2F0dGFjaG1lbnRcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGU6
IFNOREJPWCBTYW5kYm94IEFuYWx5emVyIFtBdHRhY2htZW50XVwiPjxkb2N1bWVudGF0aW9uPlRo
aXMgd29ya2Zsb3cgdGFrZXMgYW4gYXR0YWNobWVudCBmaWxlIGFzIGlucHV0IGFuZCBjYWxscyB0
aGUgU05EQk9YIHBsYXRmb3JtIGZ1bmN0aW9uIHRvIGRldGVybWluZSBpZiB0aGUgZmlsZSBjb250
YWlucyBtYWx3YXJlLiAgVGhlIGFuYWx5c2lzIHJlc3VsdCBpcyByZXR1cm5lZCBpbiBhbiBpbmNp
ZGVudCBub3RlLjwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRfMTU1
YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMGEydmY0djwvb3V0Z29pbmc+PC9zdGFydEV2
ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzFneXhjdGVcIiBuYW1lPVwiU05EQk9Y
IFNhbmRib3ggQW5hbHl6ZXJcIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lv
bkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cImMxMWM0OWI4LWU1NzQtNDllNi04
Mzk5LTVkNTFiZDZiYjJkMlwiPntcImlucHV0c1wiOnt9LFwicG9zdF9wcm9jZXNzaW5nX3Njcmlw
dFwiOlwiZGVmIGZvbnRfY29sb3Ioc2NvcmUpOlxcbiAgICBjb2xvciA9IFxcXCJncmVlblxcXCJc
XG4gICAgdHJ5OlxcbiAgICAgICAgaWYgZmxvYXQoc2NvcmUpICZndDs9IDAuNTY6XFxuICAgICAg
ICAgICAgY29sb3IgPSBcXFwicmVkXFxcIlxcbiAgICBleGNlcHQ6XFxuICAgICAgICBwYXNzXFxu
ICAgIHJldHVybiBjb2xvclxcbiAgICBcXG5kZWYgc2FtcGxlX3Njb3JlKHNjb3JlKTpcXG4gICAg
cmV0dXJuIHJvdW5kKHNjb3JlICogMTAwKSBpZiBzY29yZSBlbHNlIDBcXG5cXG5cXG5pZiBub3Qg
cmVzdWx0cy5zbmRib3hfYW5hbHlzaXNfcmVwb3J0X3N0YXR1czpcXG4gICAgbm90ZVRleHQgPSB1
XFxcIlxcXCJcXFwiU3VjY2Vzc2Z1bCBzdWJtaXQgJmx0O2ImZ3Q7e30mbHQ7L2ImZ3Q7IHRvIFNO
REJPWCBQbGF0Zm9ybS4gSG93ZXZlciBpdCB3aWxsIHRha2UgdGltZSB0byBnZW5lcmF0ZSBhbiBh
bmFseXNpcyByZXBvcnQsIHBsZWFzZSBzdWJtaXQgaXQgYWdhaW4gbGF0ZXIuICZsdDticiZndDtc
XFwiXFxcIlxcXCIuZm9ybWF0KFxcbiAgICAgICAgYXR0YWNobWVudC5uYW1lKVxcblxcbmVsc2U6
XFxuICAgIG5vdGVUZXh0ID0gdVxcXCJcXFwiXFxcIlN1Y2Nlc3NmdWwgc3VibWl0ICZsdDtiJmd0
O3t9Jmx0Oy9iJmd0OyB0byBTTkRCT1ggUGxhdGZvcm0uIENoZWNrIHRoZSByZXN1bHRzIGJlbG93
OiAmbHQ7YnImZ3Q7XFxcIlxcXCJcXFwiLmZvcm1hdChcXG4gICAgICAgIGF0dGFjaG1lbnQubmFt
ZSlcXG5cXG4gICAgZm9yIHNhbXBsZSBpbiByZXN1bHRzLnNhbXBsZV9maW5hbF9yZXN1bHQ6XFxu
ICAgICAgICBub3RlVGV4dCArPSB1XFxcIlxcXCJcXFwiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cXFwiXFxcIlxc
XCJcXG4gICAgICAgIGNvbG9yID0gZm9udF9jb2xvcihzYW1wbGVbXFxcInNhbXBsZV9yZXBvcnRc
XFwiXVtcXFwic2NvcmVcXFwiXSlcXG4gICAgICAgIG5vdGVUZXh0ICs9IHVcXFwiXFxcIlxcXCIm
bHQ7YnImZ3Q7U05EQk9YIFNhbmRib3ggQW5hbHlzaXM6ICZsdDtiJmd0O3tzYW1wbGVfZmlsZW5h
bWV9Jmx0Oy9iJmd0OyBjb21wbGV0ZS4mbHQ7YnImZ3Q7XFxuICAgICAgICAgICAgICAgICAgIFNO
REJPWCBPbmxpbmUgQXR0YWNobWVudDogJmx0O2EgaHJlZj17c2FtcGxlX29ubGluZV9yZXBvcnR9
Jmd0O3tzYW1wbGVfb25saW5lX3JlcG9ydH0mbHQ7L2EmZ3Q7Jmx0O2JyJmd0O1xcbiAgICAgICAg
ICAgICAgICAgICBTTkRCT1ggQW5hbHl6ZXIgcmVzdWx0OiAgU2NvcmU6ICZsdDtiIHN0eWxlPSBc
XFwiY29sb3I6e2NvbG9yfVxcXCImZ3Q7e3NhbXBsZV9zY29yZX0mbHQ7L2ImZ3Q7ICZsdDticiZn
dDtcXG4gICAgICAgICAgICAgICBcXFwiXFxcIlxcXCIuZm9ybWF0KHNhbXBsZV9maWxlbmFtZT1z
YW1wbGVbXFxcInNhbXBsZV9yZXBvcnRcXFwiXVtcXFwibmFtZVxcXCJdLFxcbiAgICAgICAgICAg
ICAgICAgICAgICAgICAgc2FtcGxlX29ubGluZV9yZXBvcnQ9c2FtcGxlW1xcXCJzYW1wbGVfcmVw
b3J0XFxcIl1bXFxcInNhbXBsZV91cmxcXFwiXSxcXG4gICAgICAgICAgICAgICAgICAgICAgICAg
IGNvbG9yPWNvbG9yLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc2FtcGxlX3Njb3JlPXNh
bXBsZV9zY29yZShzYW1wbGVbXFxcInNhbXBsZV9yZXBvcnRcXFwiXVtcXFwic2NvcmVcXFwiXSkp
XFxuXFxuaW5jaWRlbnQuYWRkTm90ZShoZWxwZXIuY3JlYXRlUmljaFRleHQobm90ZVRleHQpKVxc
blwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMuaW5jaWRlbnRfaWQgPSBpbmNp
ZGVudC5pZFxcbmlucHV0cy5hdHRhY2htZW50X2lkID0gYXR0YWNobWVudC5pZFxcblwiLFwicmVz
dWx0X25hbWVcIjpcIlwifTwvcmVzaWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVudHM+
PGluY29taW5nPlNlcXVlbmNlRmxvd18wYTJ2ZjR2PC9pbmNvbWluZz48b3V0Z29pbmc+U2VxdWVu
Y2VGbG93XzFlaHd1MGU8L291dGdvaW5nPjwvc2VydmljZVRhc2s+PHNlcXVlbmNlRmxvdyBpZD1c
IlNlcXVlbmNlRmxvd18wYTJ2ZjR2XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIg
dGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMWd5eGN0ZVwiLz48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVu
dF8wcG1wazRhXCI+PGluY29taW5nPlNlcXVlbmNlRmxvd18xZWh3dTBlPC9pbmNvbWluZz48L2Vu
ZEV2ZW50PjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMWVod3UwZVwiIHNvdXJjZVJl
Zj1cIlNlcnZpY2VUYXNrXzFneXhjdGVcIiB0YXJnZXRSZWY9XCJFbmRFdmVudF8wcG1wazRhXCIv
Pjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIj48dGV4dD5TdGFy
dCB5b3VyIHdvcmtmbG93IGhlcmU8L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24g
aWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3ht
XCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiLz48dGV4dEFubm90YXRpb24g
aWQ9XCJUZXh0QW5ub3RhdGlvbl8wd3Q2Zm9xXCI+PHRleHQ+UmVzdWx0IGlzIGluY2lkZW50IG5v
dGUgaXMgY3JlYXRlZCBjb250YWluaW5nIHRoZSByZXN1bHRzIG9mIGFuYWx5c2lzPC90ZXh0Pjwv
dGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMGVzMW9vdVwiIHNv
dXJjZVJlZj1cIlNlcnZpY2VUYXNrXzFneXhjdGVcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlv
bl8wd3Q2Zm9xXCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzF1c2t3aDFc
Ij48dGV4dD48IVtDREFUQVtpbnB1dHM6XG4xLiBpbmNpZGVudF9pZCAocmVxdWlyZWQpXG4yLiBh
dHRhY2htZW50X2lkXG4zLiBhbmFseXNpc19yZXBvcnRfc3RhdHVzKFwiTm9cIiBieSBkZWZhdWx0
KTpcdTAwYTBcIlllc1wiIGZvciBhbmFseXNpcyBoYXMgZmluaXNoZWQsIFwiTm9cIiBmb3IgYW5h
bHlzaXMgaGFzIG5vdCBjb21wbGV0ZWQgeWV0Ll1dPjwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxh
c3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzF3MzJzc25cIiBzb3VyY2VSZWY9XCJTZXJ2aWNl
VGFza18xZ3l4Y3RlXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMXVza3doMVwiLz48L3By
b2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQ
TU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBt
bmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3Rh
cnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwi
MzZcIiB4PVwiMTYyXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRz
IGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9icG1uZGk6
QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVu
dD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRf
ZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5
PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50
PVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9kaVwiPjxv
bWdkaTp3YXlwb2ludCB4PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMjBc
Ii8+PG9tZ2RpOndheXBvaW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1c
IjI1NFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1c
IlNlcnZpY2VUYXNrXzFneXhjdGVcIiBpZD1cIlNlcnZpY2VUYXNrXzFneXhjdGVfZGlcIj48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiMjkwXCIgeT1cIjE2Nlwi
Lz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVl
bmNlRmxvd18wYTJ2ZjR2XCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMGEydmY0dl9kaVwiPjxvbWdkaTp3
YXlwb2ludCB4PVwiMTk4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9t
Z2RpOndheXBvaW50IHg9XCIyOTBcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwi
Lz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIw
XCIgeD1cIjI0NFwiIHk9XCIxODRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5F
ZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMHBtcGs0YVwiIGlk
PVwiRW5kRXZlbnRfMHBtcGs0YV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0
aD1cIjM2XCIgeD1cIjUzMlwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJv
dW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI1NTBcIiB5PVwiMjI3XCIvPjwvYnBt
bmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxl
bWVudD1cIlNlcXVlbmNlRmxvd18xZWh3dTBlXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMWVod3UwZV9k
aVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMzkwXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9
XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI1MzJcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEz
XCIgd2lkdGg9XCIwXCIgeD1cIjQ2MVwiIHk9XCIxODRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwv
YnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90
YXRpb25fMHd0NmZvcVwiIGlkPVwiVGV4dEFubm90YXRpb25fMHd0NmZvcV9kaVwiPjxvbWdkYzpC
b3VuZHMgaGVpZ2h0PVwiNTNcIiB3aWR0aD1cIjM3MFwiIHg9XCI0MjBcIiB5PVwiMzhcIi8+PC9i
cG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlv
bl8wZXMxb291XCIgaWQ9XCJBc3NvY2lhdGlvbl8wZXMxb291X2RpXCI+PG9tZ2RpOndheXBvaW50
IHg9XCIzOTBcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE3OVwiLz48b21nZGk6d2F5
cG9pbnQgeD1cIjU1NlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiOTFcIi8+PC9icG1u
ZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlv
bl8xdXNrd2gxXCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xdXNrd2gxX2RpXCI+PG9tZ2RjOkJvdW5k
cyBoZWlnaHQ9XCIxNDNcIiB3aWR0aD1cIjI1MFwiIHg9XCI4NFwiIHk9XCItNTlcIi8+PC9icG1u
ZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8x
dzMyc3NuXCIgaWQ9XCJBc3NvY2lhdGlvbl8xdzMyc3NuX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9
XCIzMTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE2NlwiLz48b21nZGk6d2F5cG9p
bnQgeD1cIjI1OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiODRcIi8+PC9icG1uZGk6
QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5p
dGlvbnM+IiwgIndvcmtmbG93X2lkIjogImV4YW1wbGVfc25kYm94X3NhbmRib3hfYW5hbHl6ZXJf
YXR0YWNobWVudCIsICJ2ZXJzaW9uIjogOX0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTYwODk4
MjA3NTY0LCAiY3JlYXRvcl9pZCI6ICJ0b21lckBzbmRib3guY29tIiwgImFjdGlvbnMiOiBbXSwg
InByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfc25kYm94X3NhbmRib3hfYW5hbHl6ZXJfYXR0
YWNobWVudCIsICJuYW1lIjogIkV4YW1wbGU6IFNOREJPWCBTYW5kYm94IEFuYWx5emVyIFtBdHRh
Y2htZW50XSJ9XSwgImFjdGlvbnMiOiBbeyJsb2dpY190eXBlIjogImFueSIsICJuYW1lIjogIkV4
YW1wbGU6IFNOREJPWCBTYW5kYm94IEFuYWx5emVyIFtBcnRpZmFjdF0iLCAidmlld19pdGVtcyI6
IFtdLCAidHlwZSI6IDEsICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVfc25kYm94X3NhbmRib3hfYW5h
bHl6ZXJfYXJ0aWZhY3QiXSwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgInRpbWVvdXRfc2Vj
b25kcyI6IDg2NDAwLCAidXVpZCI6ICJlYjIwNzllYi1lYWJjLTRkMmQtOWUwNC0yMTUxZGIwZDdj
OGMiLCAiYXV0b21hdGlvbnMiOiBbeyJ0YXNrc190b19jcmVhdGUiOiBbInNhbmRib3hfbWFsd2Fy
ZV9pbmZlY3RlZF9zeXN0ZW1zIl0sICJ0eXBlIjogImNyZWF0ZV90YXNrIiwgInZhbHVlIjogbnVs
bH1dLCAiZXhwb3J0X2tleSI6ICJFeGFtcGxlOiBTTkRCT1ggU2FuZGJveCBBbmFseXplciBbQXJ0
aWZhY3RdIiwgImNvbmRpdGlvbnMiOiBbeyJ0eXBlIjogbnVsbCwgImV2YWx1YXRpb25faWQiOiBu
dWxsLCAiZmllbGRfbmFtZSI6ICJhcnRpZmFjdC50eXBlIiwgIm1ldGhvZCI6ICJlcXVhbHMiLCAi
dmFsdWUiOiAiTG9nIEZpbGUifSwgeyJ0eXBlIjogbnVsbCwgImV2YWx1YXRpb25faWQiOiBudWxs
LCAiZmllbGRfbmFtZSI6ICJhcnRpZmFjdC50eXBlIiwgIm1ldGhvZCI6ICJlcXVhbHMiLCAidmFs
dWUiOiAiRW1haWwgQXR0YWNobWVudCJ9LCB7InR5cGUiOiBudWxsLCAiZXZhbHVhdGlvbl9pZCI6
IG51bGwsICJmaWVsZF9uYW1lIjogImFydGlmYWN0LnR5cGUiLCAibWV0aG9kIjogImVxdWFscyIs
ICJ2YWx1ZSI6ICJPdGhlciBGaWxlIn1dLCAiaWQiOiAxNiwgIm1lc3NhZ2VfZGVzdGluYXRpb25z
IjogW119LCB7ImxvZ2ljX3R5cGUiOiAiYWxsIiwgIm5hbWUiOiAiRXhhbXBsZTogU05EQk9YIFNh
bmRib3ggQW5hbHl6ZXIgW0F0dGFjaG1lbnRdIiwgInZpZXdfaXRlbXMiOiBbXSwgInR5cGUiOiAx
LCAid29ya2Zsb3dzIjogWyJleGFtcGxlX3NuZGJveF9zYW5kYm94X2FuYWx5emVyX2F0dGFjaG1l
bnQiXSwgIm9iamVjdF90eXBlIjogImF0dGFjaG1lbnQiLCAidGltZW91dF9zZWNvbmRzIjogODY0
MDAsICJ1dWlkIjogImE2ZWU0MzhhLTZlNGMtNDU5NC05ZmMyLTM4MmVlNzJhNTBkNiIsICJhdXRv
bWF0aW9ucyI6IFtdLCAiZXhwb3J0X2tleSI6ICJFeGFtcGxlOiBTTkRCT1ggU2FuZGJveCBBbmFs
eXplciBbQXR0YWNobWVudF0iLCAiY29uZGl0aW9ucyI6IFtdLCAiaWQiOiAxNywgIm1lc3NhZ2Vf
ZGVzdGluYXRpb25zIjogW119XSwgImxheW91dHMiOiBbXSwgImV4cG9ydF9mb3JtYXRfdmVyc2lv
biI6IDIsICJpZCI6IDE4LCAiaW5kdXN0cmllcyI6IG51bGwsICJwaGFzZXMiOiBbeyJ1dWlkIjog
IjQ0ODY4Yzg2LTI0NmUtNGU2ZS04NjM2LWZhMjg0OGIyZjI3OSIsICJwZXJtcyI6IG51bGwsICJl
eHBvcnRfa2V5IjogIkRldGVjdC9BbmFseXplIiwgImVuYWJsZWQiOiB0cnVlLCAiaWQiOiAwLCAi
b3JkZXIiOiAyLCAibmFtZSI6ICJEZXRlY3QvQW5hbHl6ZSJ9XSwgImFjdGlvbl9vcmRlciI6IFtd
LCAiZ2VvcyI6IG51bGwsICJsb2NhbGUiOiBudWxsLCAic2VydmVyX3ZlcnNpb24iOiB7Im1ham9y
IjogMzIsICJ2ZXJzaW9uIjogIjMyLjAuNDUwMiIsICJidWlsZF9udW1iZXIiOiA0NTAyLCAibWlu
b3IiOiAwfSwgInRpbWVmcmFtZXMiOiBudWxsLCAid29ya3NwYWNlcyI6IFtdLCAiYXV0b21hdGlj
X3Rhc2tzIjogW3siZHVlX2RhdGVfb2Zmc2V0IjogMCwgImNhdGVnb3J5X2lkIjogbnVsbCwgImFz
c29jaWF0ZWRfYWN0aW9ucyI6IG51bGwsICJuYW1lIjogIlNhbmRib3ggbWFsd2FyZS1pbmZlY3Rl
ZCBzeXN0ZW1zIiwgImZvcm0iOiBudWxsLCAiZXhwb3J0X2tleSI6ICJzYW5kYm94X21hbHdhcmVf
aW5mZWN0ZWRfc3lzdGVtcyIsICJlbmFibGVkIjogdHJ1ZSwgInV1aWQiOiAiZmZhMTZkM2UtNGUw
My00N2ViLWJiMjktMDZmNTc3NTBiODA3IiwgImR1ZV9kYXRlX3VuaXRzIjogbnVsbCwgInRhc2tf
bGF5b3V0IjogW10sICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJzYW5kYm94X21hbHdhcmVfaW5mZWN0
ZWRfc3lzdGVtcyIsICJwaGFzZV9pZCI6ICJEZXRlY3QvQW5hbHl6ZSIsICJvcHRpb25hbCI6IGZh
bHNlLCAiaWQiOiAwLCAiaW5zdHJ1Y3Rpb25zIjogIlNhbmRib3ggaW5mZWN0ZWQgc3lzdGVtcyBh
bmQgbW9uaXRvciBiZWhhdmlvciAoZS5nLiBCb3ROZXQgQyZhbXA7QyBjb21tdW5pY2F0aW9uKS4g
SWYgeW91IHdvdWxkIGxpa2UgZ3VpZGFuY2Ugb24gYW5hbHl6aW5nIG1hbHdhcmUsIGh0dHA6Ly96
ZWx0c2VyLmNvbS9tYWx3YXJlLWFuYWx5c2lzLXRvb2xraXQvIG9mZmVycyBhIGd1aWRlIG9uIGJ1
aWxkaW5nIGEgbWFsd2FyZSBhbmFseXNpcyBsYWIuIEluIHRoZSBjYXNlIG9mIG1vYmlsZSBkZXZp
Y2VzLCB5b3UgY2FuIGxldmVyYWdlIGEgc2FuZGJveCBhbmQgcmV2ZXJzZSBlbmdpbmVlcmluZyB0
b29sIHN1Y2ggYXMgdGhlIEFuZHJvaWQgUmV2ZXJzZSBFbmdpbmVlcmluZyBUb29sOlxuaHR0cHM6
Ly9yZWRtaW5lLmhvbmV5bmV0Lm9yZy9wcm9qZWN0cy9hcmUvd2lraSJ9XSwgImZ1bmN0aW9ucyI6
IFt7ImRpc3BsYXlfbmFtZSI6ICJTTkRCT1ggU2FuZGJveCBBbmFseXplciIsICJkZXNjcmlwdGlv
biI6IHsiY29udGVudCI6ICJBbmFseXplIGFuIGF0dGFjaG1lbnQgb3IgYXJ0aWZhY3QgZmlsZSBm
b3IgbWFsd2FyZSB1c2luZyBTTkRCT1ggcGxhdGZvcm0uIiwgImZvcm1hdCI6ICJ0ZXh0In0sICJj
cmVhdG9yIjogeyJkaXNwbGF5X25hbWUiOiAiUmVzaWxpZW50IFN5c2FkbWluIiwgInR5cGUiOiAi
dXNlciIsICJpZCI6IDIsICJuYW1lIjogInRvbWVyQHNuZGJveC5jb20ifSwgInZpZXdfaXRlbXMi
OiBbeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xp
bmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICJj
YTdkZTFlMy1mZWU4LTQzYmUtYjE1MS1hNmM5ZGIwNjAyNDgiLCAic3RlcF9sYWJlbCI6IG51bGx9
LCB7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlu
a19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogImVh
ZDIxNGMyLTEzZmUtNDNmNi1hM2M3LTY3NmE4ODMzOGRiYiIsICJzdGVwX2xhYmVsIjogbnVsbH0s
IHsic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5r
X2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiZWZk
YmNhN2UtNmFlOC00MjY5LWEzZDEtODBmMTcxNmE2MjIyIiwgInN0ZXBfbGFiZWwiOiBudWxsfSwg
eyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtf
aGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICIxN2Mz
ZTY1Mi02NTU5LTQ5MzUtOWY5NS03NDM3NGNhMzdhN2IiLCAic3RlcF9sYWJlbCI6IG51bGx9XSwg
ImV4cG9ydF9rZXkiOiAiZm5fc25kYm94X3NhbmRib3hfYW5hbHl6ZXIiLCAidXVpZCI6ICJjMTFj
NDliOC1lNTc0LTQ5ZTYtODM5OS01ZDUxYmQ2YmIyZDIiLCAibGFzdF9tb2RpZmllZF9ieSI6IHsi
ZGlzcGxheV9uYW1lIjogIlJlc2lsaWVudCBTeXNhZG1pbiIsICJ0eXBlIjogInVzZXIiLCAiaWQi
OiAyLCAibmFtZSI6ICJ0b21lckBzbmRib3guY29tIn0sICJ2ZXJzaW9uIjogMiwgIndvcmtmbG93
cyI6IFt7ImRlc2NyaXB0aW9uIjogbnVsbCwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgImFj
dGlvbnMiOiBbXSwgIm5hbWUiOiAiRXhhbXBsZTogU05EQk9YIFNhbmRib3ggQW5hbHl6ZXIgW0Fy
dGlmYWN0XSIsICJ3b3JrZmxvd19pZCI6IDMsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxl
X3NuZGJveF9zYW5kYm94X2FuYWx5emVyX2FydGlmYWN0IiwgInV1aWQiOiBudWxsfSwgeyJkZXNj
cmlwdGlvbiI6IG51bGwsICJvYmplY3RfdHlwZSI6ICJhdHRhY2htZW50IiwgImFjdGlvbnMiOiBb
XSwgIm5hbWUiOiAiRXhhbXBsZTogU05EQk9YIFNhbmRib3ggQW5hbHl6ZXIgW0F0dGFjaG1lbnRd
IiwgIndvcmtmbG93X2lkIjogNCwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfc25kYm94
X3NhbmRib3hfYW5hbHl6ZXJfYXR0YWNobWVudCIsICJ1dWlkIjogbnVsbH1dLCAibGFzdF9tb2Rp
ZmllZF90aW1lIjogMTU2MDg5Mjc0ODA2NiwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJzbmRib3hf
c2FuZGJveF9tZXNzYWdlX2Rlc3RpbmF0aW9uIiwgImlkIjogMiwgIm5hbWUiOiAiZm5fc25kYm94
X3NhbmRib3hfYW5hbHl6ZXIifV0sICJub3RpZmljYXRpb25zIjogbnVsbCwgInJlZ3VsYXRvcnMi
OiBudWxsLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJjcmVhdGVfZGF0ZSI6IDE1NjI2ODc3NzI0MDcs
ICJkZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhw
b3J0X2tleSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiaWQiOiAwLCAi
bmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAidXBkYXRlX2RhdGUi
OiAxNTYyNjg3NzcyNDA3LCAidXVpZCI6ICJiZmVlYzJkNC0zNzcwLTExZTgtYWQzOS00YTAwMDQw
NDRhYTAiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBu
dWxsLCAiaGlkZGVuIjogZmFsc2V9XSwgInNjcmlwdHMiOiBbXSwgInR5cGVzIjogW10sICJtZXNz
YWdlX2Rlc3RpbmF0aW9ucyI6IFt7InV1aWQiOiAiY2NmOGQ2MmUtYzQ3Zi00NTQyLThhYTAtYjYx
ZTk4ZDlhYjY5IiwgImV4cG9ydF9rZXkiOiAic25kYm94X3NhbmRib3hfbWVzc2FnZV9kZXN0aW5h
dGlvbiIsICJuYW1lIjogIlNOREJPWCBTYW5kYm94IE1lc3NhZ2UgRGVzdGluYXRpb24iLCAiZGVz
dGluYXRpb25fdHlwZSI6IDAsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJzbmRib3hfc2FuZGJveF9t
ZXNzYWdlX2Rlc3RpbmF0aW9uIiwgImV4cGVjdF9hY2siOiB0cnVlLCAidXNlcnMiOiBbInRvbWVy
QHNuZGJveC5jb20iXX1dLCAiaW5jaWRlbnRfYXJ0aWZhY3RfdHlwZXMiOiBbXSwgInJvbGVzIjog
W10sICJmaWVsZHMiOiBbeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMCwgIm9wZXJhdGlv
bl9wZXJtcyI6IHt9LCAidGV4dCI6ICJTaW11bGF0aW9uIiwgImJsYW5rX29wdGlvbiI6IGZhbHNl
LCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiA1OSwgInJlYWRfb25s
eSI6IHRydWUsICJ1dWlkIjogImMzZjBlM2VkLTIxZTEtNGQ1My1hZmZiLWZlNWNhMzMwOGNjYSIs
ICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJ0b29sdGlwIjogIldo
ZXRoZXIgdGhlIGluY2lkZW50IGlzIGEgc2ltdWxhdGlvbiBvciBhIHJlZ3VsYXIgaW5jaWRlbnQu
ICBUaGlzIGZpZWxkIGlzIHJlYWQtb25seS4iLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4
dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogImluY2lkZW50L2luY190
cmFpbmluZyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAibmFtZSI6ICJpbmNfdHJhaW5p
bmciLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFs
c2UsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3Bl
cmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogImFydGlmYWN0X2lkIiwgImJsYW5rX29wdGlvbiI6
IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAxNTIsICJy
ZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAiZWZkYmNhN2UtNmFlOC00MjY5LWEzZDEtODBmMTcx
NmE2MjIyIiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAidG9vbHRp
cCI6ICJ0aGUgaWQgb2YgdGhlIGFydGlmYWN0IG9iamVjdCIsICJpbnRlcm5hbCI6IGZhbHNlLCAi
cmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiX19mdW5j
dGlvbi9hcnRpZmFjdF9pZCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xk
ZXIiOiAiIiwgIm5hbWUiOiAiYXJ0aWZhY3RfaWQiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVm
YXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0aW9u
cyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogImF0
dGFjaG1lbnRfaWQiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hh
bmdlYWJsZSI6IHRydWUsICJpZCI6IDE1MSwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICIx
N2MzZTY1Mi02NTU5LTQ5MzUtOWY5NS03NDM3NGNhMzdhN2IiLCAiY2hvc2VuIjogZmFsc2UsICJp
bnB1dF90eXBlIjogIm51bWJlciIsICJ0b29sdGlwIjogInRoZSBpZCBvZiB0aGUgYXR0YWNobWVu
dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBb
XSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9hdHRhY2htZW50X2lkIiwgImhpZGVfbm90aWZp
Y2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJhdHRhY2htZW50X2lk
IiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNl
LCAidmFsdWVzIjogW119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJh
dGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJpbmNpZGVudF9pZCIsICJibGFua19vcHRpb24iOiBm
YWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMTUwLCAicmVh
ZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogImVhZDIxNGMyLTEzZmUtNDNmNi1hM2M3LTY3NmE4ODMz
OGRiYiIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAibnVtYmVyIiwgInRvb2x0aXAi
OiAidGhlIGlkIG9mIHRoZSBpbmNpZGVudCIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0
IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9pbmNp
ZGVudF9pZCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwg
Im5hbWUiOiAiaW5jaWRlbnRfaWQiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9z
ZW5fYnlfc2VydmVyIjogZmFsc2UsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAidmFsdWVzIjogW119
LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9
LCAidGV4dCI6ICJzbmRib3hfYW5hbHlzaXNfcmVwb3J0X3N0YXR1cyIsICJibGFua19vcHRpb24i
OiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMTUzLCAi
cmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogImNhN2RlMWUzLWZlZTgtNDNiZS1iMTUxLWE2Yzlk
YjA2MDI0OCIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJ0b29s
dGlwIjogInRoZSBhbmFseXNpcyByZXBvcnQgaGFzIGdlbmVyYXRlZD8gIFR1cmUgb3IgRmFsc2Ui
LCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10s
ICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vc25kYm94X2FuYWx5c2lzX3JlcG9ydF9zdGF0dXMi
LCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIiIsICJuYW1lIjog
InNuZGJveF9hbmFseXNpc19yZXBvcnRfc3RhdHVzIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRl
ZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW119XSwgIm92ZXJyaWRl
cyI6IFtdLCAiZXhwb3J0X2RhdGUiOiAxNTYwODk4MjYwMTA4fQ==
"""
    )