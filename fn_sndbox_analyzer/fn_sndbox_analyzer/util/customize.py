# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_sndbox_analyzer"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_sndbox_analyzer package"""
    reload_params = {"package": u"fn_sndbox_analyzer",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"analysis_report_status", u"artifact_id", u"attachment_id", u"incident_id"], 
                    "datatables": [], 
                    "message_destinations": [u"sndbox_sandbox_message_destination"], 
                    "functions": [u"fn_sndbox_sandbox_analyzer"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_sndbox_sandbox_analyzer_artifact", u"example_sndbox_sandbox_analyzer_attachment"], 
                    "actions": [u"Example: SNDBOX Sandbox Analyzer [Artifact]", u"Example: SNDBOX Sandbox Analyzer [Attachment]"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     analysis_report_status
    #     artifact_id
    #     attachment_id
    #     incident_id
    #   Message Destinations:
    #     sndbox_sandbox_message_destination
    #   Functions:
    #     fn_sndbox_sandbox_analyzer
    #   Workflows:
    #     example_sndbox_sandbox_analyzer_artifact
    #     example_sndbox_sandbox_analyzer_attachment
    #   Rules:
    #     Example: SNDBOX Sandbox Analyzer [Artifact]
    #     Example: SNDBOX Sandbox Analyzer [Attachment]


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ1dWlkIjogIjg4ZmE0YzZjLTMzMjct
NGM0NS04NjQ2LTQzMzBmODQ4OWRlYiIsICJkZXNjcmlwdGlvbiI6ICJUaGlzIHdvcmtmbG93IHRh
a2VzIGFuIGF0dGFjaG1lbnQgZmlsZSBhcyBpbnB1dCBhbmQgY2FsbHMgdGhlIFNOREJPWCBwbGF0
Zm9ybSBmdW5jdGlvbiB0byBkZXRlcm1pbmUgaWYgdGhlIGZpbGUgY29udGFpbnMgbWFsd2FyZS4g
IFRoZSBhbmFseXNpcyByZXN1bHQgaXMgcmV0dXJuZWQgaW4gYW4gaW5jaWRlbnQgbm90ZS4iLCAi
b2JqZWN0X3R5cGUiOiAiYXR0YWNobWVudCIsICJleHBvcnRfa2V5IjogImV4YW1wbGVfc25kYm94
X3NhbmRib3hfYW5hbHl6ZXJfYXR0YWNobWVudCIsICJ3b3JrZmxvd19pZCI6IDQsICJsYXN0X21v
ZGlmaWVkX2J5IjogInRvbWVyQHNuZGJveC5jb20iLCAiY29udGVudCI6IHsieG1sIjogIjw/eG1s
IHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1c
Imh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1u
ZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21n
ZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2Rp
PVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGll
bnQ9XCJodHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93
d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcv
MjAwMS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNh
bXVuZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cImV4YW1wbGVfc25kYm94X3NhbmRib3hfYW5h
bHl6ZXJfYXR0YWNobWVudFwiIGlzRXhlY3V0YWJsZT1cInRydWVcIiBuYW1lPVwiRXhhbXBsZTog
U05EQk9YIFNhbmRib3ggQW5hbHl6ZXIgW0F0dGFjaG1lbnRdXCI+PGRvY3VtZW50YXRpb24+VGhp
cyB3b3JrZmxvdyB0YWtlcyBhbiBhdHRhY2htZW50IGZpbGUgYXMgaW5wdXQgYW5kIGNhbGxzIHRo
ZSBTTkRCT1ggcGxhdGZvcm0gZnVuY3Rpb24gdG8gZGV0ZXJtaW5lIGlmIHRoZSBmaWxlIGNvbnRh
aW5zIG1hbHdhcmUuICBUaGUgYW5hbHlzaXMgcmVzdWx0IGlzIHJldHVybmVkIGluIGFuIGluY2lk
ZW50IG5vdGUuPC9kb2N1bWVudGF0aW9uPjxzdGFydEV2ZW50IGlkPVwiU3RhcnRFdmVudF8xNTVh
c3htXCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wYTJ2ZjR2PC9vdXRnb2luZz48L3N0YXJ0RXZl
bnQ+PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMWd5eGN0ZVwiIG5hbWU9XCJTTkRCT1gg
U2FuZGJveCBBbmFseXplclwiIHJlc2lsaWVudDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9u
RWxlbWVudHM+PHJlc2lsaWVudDpmdW5jdGlvbiB1dWlkPVwiYzExYzQ5YjgtZTU3NC00OWU2LTgz
OTktNWQ1MWJkNmJiMmQyXCI+e1wiaW5wdXRzXCI6e30sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0
XCI6XCJkZWYgZm9udF9jb2xvcihzY29yZSk6XFxuICAgIGNvbG9yID0gXFxcImdyZWVuXFxcIlxc
biAgICB0cnk6XFxuICAgICAgICBpZiBmbG9hdChzY29yZSkgJmd0Oz0gMC41NjpcXG4gICAgICAg
ICAgICBjb2xvciA9IFxcXCJyZWRcXFwiXFxuICAgIGV4Y2VwdDpcXG4gICAgICAgIHBhc3NcXG4g
ICAgcmV0dXJuIGNvbG9yXFxuXFxuXFxuaWYgbm90IHJlc3VsdHMuYW5hbHlzaXNfcmVwb3J0X3N0
YXR1czpcXG4gICAgbm90ZVRleHQgPSB1XFxcIlxcXCJcXFwiU3VjY2Vzc2Z1bCBzdWJtaXQgJmx0
O2ImZ3Q7e30mbHQ7L2ImZ3Q7IHRvIFNOREJPWCBQbGF0Zm9ybS4gSG93ZXZlciBpdCB3aWxsIHRh
a2UgdGltZSB0byBnZW5lcmF0ZSBhbiBhbmFseXNpcyByZXBvcnQsIHBsZWFzZSBzdWJtaXQgaXQg
YWdhaW4gbGF0ZXIuICZsdDticiZndDtcXFwiXFxcIlxcXCIuZm9ybWF0KFxcbiAgICAgICAgYXJ0
aWZhY3QudmFsdWUpXFxuXFxuZWxzZTpcXG4gICAgbm90ZVRleHQgPSB1XFxcIlxcXCJcXFwiU3Vj
Y2Vzc2Z1bCBzdWJtaXQgJmx0O2ImZ3Q7e30mbHQ7L2ImZ3Q7IHRvIFNOREJPWCBQbGF0Zm9ybS4g
Q2hlY2sgdGhlIHJlc3VsdHMgYmVsb3c6ICZsdDticiZndDtcXFwiXFxcIlxcXCIuZm9ybWF0KFxc
biAgICAgICAgYXJ0aWZhY3QudmFsdWUpXFxuXFxuICAgIGZvciBzYW1wbGUgaW4gcmVzdWx0cy5z
YW1wbGVfZmluYWxfcmVzdWx0OlxcbiAgICAgICAgbm90ZVRleHQgKz0gdVxcXCJcXFwiXFxcIi0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tXFxcIlxcXCJcXFwiXFxuICAgICAgICBjb2xvciA9IGZvbnRfY29sb3Ioc2Ft
cGxlW1xcXCJzYW1wbGVfcmVwb3J0XFxcIl1bXFxcInNjb3JlXFxcIl0pXFxuICAgICAgICBub3Rl
VGV4dCArPSB1XFxcIlxcXCJcXFwiJmx0O2JyJmd0O1NOREJPWCBTYW5kYm94IEFuYWx5c2lzOiAm
bHQ7YiZndDt7c2FtcGxlX2ZpbGVuYW1lfSZsdDsvYiZndDsgY29tcGxldGUuJmx0O2JyJmd0O1xc
biAgICAgICAgICAgICAgICAgICBTTkRCT1ggT25saW5lIEF0dGFjaG1lbnQ6ICZsdDthIGhyZWY9
e3NhbXBsZV9vbmxpbmVfcmVwb3J0fSZndDt7c2FtcGxlX29ubGluZV9yZXBvcnR9Jmx0Oy9hJmd0
OyZsdDticiZndDtcXG4gICAgICAgICAgICAgICAgICAgU05EQk9YIEFuYWx5emVyIHJlc3VsdDog
IFNjb3JlOiAmbHQ7YiBzdHlsZT0gXFxcImNvbG9yOntjb2xvcn1cXFwiJmd0O3tzYW1wbGVfc2Nv
cmV9Jmx0Oy9iJmd0OyAmbHQ7YnImZ3Q7XFxuICAgICAgICAgICAgICAgXFxcIlxcXCJcXFwiLmZv
cm1hdChzYW1wbGVfZmlsZW5hbWU9c2FtcGxlW1xcXCJzYW1wbGVfcmVwb3J0XFxcIl1bXFxcIm5h
bWVcXFwiXSxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHNhbXBsZV9vbmxpbmVfcmVwb3J0
PXNhbXBsZVtcXFwic2FtcGxlX3JlcG9ydFxcXCJdW1xcXCJzYW1wbGVfdXJsXFxcIl0sXFxuICAg
ICAgICAgICAgICAgICAgICAgICAgICBjb2xvcj1jb2xvcixcXG4gICAgICAgICAgICAgICAgICAg
ICAgICAgIHNhbXBsZV9zY29yZT1zYW1wbGVbXFxcInNhbXBsZV9yZXBvcnRcXFwiXVtcXFwic2Nv
cmVcXFwiXSlcXG5cXG5pbmNpZGVudC5hZGROb3RlKGhlbHBlci5jcmVhdGVSaWNoVGV4dChub3Rl
VGV4dCkpXFxuXCIsXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlucHV0cy5pbmNpZGVudF9p
ZCA9IGluY2lkZW50LmlkXFxuaW5wdXRzLmF0dGFjaG1lbnRfaWQgPSBhdHRhY2htZW50LmlkXFxu
XCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2Vx
dWVuY2VGbG93XzBhMnZmNHY8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMWVod3Uw
ZTwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93
XzBhMnZmNHZcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJT
ZXJ2aWNlVGFza18xZ3l4Y3RlXCIvPjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzBwbXBrNGFcIj48
aW5jb21pbmc+U2VxdWVuY2VGbG93XzFlaHd1MGU8L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVl
bmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xZWh3dTBlXCIgc291cmNlUmVmPVwiU2VydmljZVRh
c2tfMWd5eGN0ZVwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzBwbXBrNGFcIi8+PHRleHRBbm5vdGF0
aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zs
b3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0
aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9
XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5v
dGF0aW9uXzB3dDZmb3FcIj48dGV4dD5SZXN1bHQgaXMgaW5jaWRlbnQgbm90ZSBpcyBjcmVhdGVk
IGNvbnRhaW5pbmcgdGhlIHJlc3VsdHMgb2YgYW5hbHlzaXM8L3RleHQ+PC90ZXh0QW5ub3RhdGlv
bj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8wZXMxb291XCIgc291cmNlUmVmPVwiU2Vy
dmljZVRhc2tfMWd5eGN0ZVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzB3dDZmb3FcIi8+
PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMXVza3doMVwiPjx0ZXh0PjwhW0NE
QVRBW2lucHV0czpcbjEuIGluY2lkZW50X2lkIChyZXF1aXJlZClcbjIuIGF0dGFjaG1lbnRfaWRc
bjMuIGFuYWx5c2lzX3JlcG9ydF9zdGF0dXMoXCJOb1wiIGJ5IGRlZmF1bHQpOlx1MDBhMFwiWWVz
XCIgZm9yIGFuYWx5c2lzIGhhcyBmaW5pc2hlZCwgXCJOb1wiIGZvciBhbmFseXNpcyBoYXMgbm90
IGNvbXBsZXRlZCB5ZXQuXV0+PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlk
PVwiQXNzb2NpYXRpb25fMXczMnNzblwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzFneXhjdGVc
IiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xdXNrd2gxXCIvPjwvcHJvY2Vzcz48YnBtbmRp
OkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5F
bGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBl
IGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFz
eG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjJc
IiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwi
IHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9i
cG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90
YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpC
b3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9i
cG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlv
bl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50
IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMFwiLz48b21nZGk6d2F5
cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBt
bmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tf
MWd5eGN0ZVwiIGlkPVwiU2VydmljZVRhc2tfMWd5eGN0ZV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIyOTBcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQ
TU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzBhMnZm
NHZcIiBpZD1cIlNlcXVlbmNlRmxvd18wYTJ2ZjR2X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIx
OThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQg
eD1cIjI5MFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBN
TkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiMjQ0XCIg
eT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpC
UE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8wcG1wazRhXCIgaWQ9XCJFbmRFdmVudF8w
cG1wazRhX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwi
NTMyXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1c
IjEzXCIgd2lkdGg9XCIwXCIgeD1cIjU1MFwiIHk9XCIyMjdcIi8+PC9icG1uZGk6QlBNTkxhYmVs
PjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVu
Y2VGbG93XzFlaHd1MGVcIiBpZD1cIlNlcXVlbmNlRmxvd18xZWh3dTBlX2RpXCI+PG9tZ2RpOndh
eXBvaW50IHg9XCIzOTBcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21n
ZGk6d2F5cG9pbnQgeD1cIjUzMlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIv
PjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBc
IiB4PVwiNDYxXCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVk
Z2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8wd3Q2Zm9x
XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8wd3Q2Zm9xX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9
XCI1M1wiIHdpZHRoPVwiMzcwXCIgeD1cIjQyMFwiIHk9XCIzOFwiLz48L2JwbW5kaTpCUE1OU2hh
cGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzBlczFvb3VcIiBp
ZD1cIkFzc29jaWF0aW9uXzBlczFvb3VfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjM5MFwiIHhz
aTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTc5XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNTU2
XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCI5MVwiLz48L2JwbW5kaTpCUE1ORWRnZT48
YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzF1c2t3aDFcIiBp
ZD1cIlRleHRBbm5vdGF0aW9uXzF1c2t3aDFfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjE0
M1wiIHdpZHRoPVwiMjUwXCIgeD1cIjg0XCIgeT1cIi01OVwiLz48L2JwbW5kaTpCUE1OU2hhcGU+
PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzF3MzJzc25cIiBpZD1c
IkFzc29jaWF0aW9uXzF3MzJzc25fZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjMxM1wiIHhzaTp0
eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTY2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMjU4XCIg
eHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCI4NFwiLz48L2JwbW5kaTpCUE1ORWRnZT48L2Jw
bW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4iLCAid29y
a2Zsb3dfaWQiOiAiZXhhbXBsZV9zbmRib3hfc2FuZGJveF9hbmFseXplcl9hdHRhY2htZW50Iiwg
InZlcnNpb24iOiA2fSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1NTY4NDQ0Njk2NzYsICJjcmVh
dG9yX2lkIjogInRvbWVyQHNuZGJveC5jb20iLCAiYWN0aW9ucyI6IFtdLCAicHJvZ3JhbW1hdGlj
X25hbWUiOiAiZXhhbXBsZV9zbmRib3hfc2FuZGJveF9hbmFseXplcl9hdHRhY2htZW50IiwgIm5h
bWUiOiAiRXhhbXBsZTogU05EQk9YIFNhbmRib3ggQW5hbHl6ZXIgW0F0dGFjaG1lbnRdIn0sIHsi
dXVpZCI6ICIzMjE0ZWZiZC02Y2U4LTQwMDctOWQ0NC0xNTA5MGI5MWE5YzIiLCAiZGVzY3JpcHRp
b24iOiAiVGhpcyB3b3JrZmxvdyB0YWtlcyBhbiBhcnRpZmFjdCBmaWxlIGFzIGlucHV0IGFuZCBj
YWxscyB0aGUgU05EQk9YIFNhbmRib3ggcGxhdGZvcm0gZnVuY3Rpb24gdG8gZGV0ZXJtaW5lIGlm
IHRoZSBmaWxlIGNvbnRhaW5zIG1hbHdhcmUuICBUaGUgYW5hbHlzaXMgcmVzdWx0IGlzIHJldHVy
bmVkIGluIGFuIGluY2lkZW50IG5vdGUuIiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgImV4
cG9ydF9rZXkiOiAiZXhhbXBsZV9zbmRib3hfc2FuZGJveF9hbmFseXplcl9hcnRpZmFjdCIsICJ3
b3JrZmxvd19pZCI6IDMsICJsYXN0X21vZGlmaWVkX2J5IjogInRvbWVyQHNuZGJveC5jb20iLCAi
Y29udGVudCI6IHsieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04
XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAx
MDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1O
LzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8y
MDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAx
MDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBt
blwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6
eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXRO
YW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cImV4
YW1wbGVfc25kYm94X3NhbmRib3hfYW5hbHl6ZXJfYXJ0aWZhY3RcIiBpc0V4ZWN1dGFibGU9XCJ0
cnVlXCIgbmFtZT1cIkV4YW1wbGU6IFNOREJPWCBTYW5kYm94IEFuYWx5emVyIFtBcnRpZmFjdF1c
Ij48ZG9jdW1lbnRhdGlvbj5UaGlzIHdvcmtmbG93IHRha2VzIGFuIGFydGlmYWN0IGZpbGUgYXMg
aW5wdXQgYW5kIGNhbGxzIHRoZSBTTkRCT1ggU2FuZGJveCBwbGF0Zm9ybSBmdW5jdGlvbiB0byBk
ZXRlcm1pbmUgaWYgdGhlIGZpbGUgY29udGFpbnMgbWFsd2FyZS4gIFRoZSBhbmFseXNpcyByZXN1
bHQgaXMgcmV0dXJuZWQgaW4gYW4gaW5jaWRlbnQgbm90ZS48L2RvY3VtZW50YXRpb24+PHN0YXJ0
RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzFv
am9rYzY8L291dGdvaW5nPjwvc3RhcnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFz
a18wNXN6cXJuXCIgbmFtZT1cIlNOREJPWCBTYW5kYm94IEFuYWx5emVyXCIgcmVzaWxpZW50OnR5
cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1
aWQ9XCJjMTFjNDliOC1lNTc0LTQ5ZTYtODM5OS01ZDUxYmQ2YmIyZDJcIj57XCJpbnB1dHNcIjp7
fSxcInBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImRlZiBmb250X2NvbG9yKHNjb3JlKTpcXG4g
ICAgY29sb3IgPSBcXFwiZ3JlZW5cXFwiXFxuICAgIHRyeTpcXG4gICAgICAgIGlmIGZsb2F0KHNj
b3JlKSAmZ3Q7PSAwLjU2OlxcbiAgICAgICAgICAgIGNvbG9yID0gXFxcInJlZFxcXCJcXG4gICAg
ZXhjZXB0OlxcbiAgICAgICAgcGFzc1xcbiAgICByZXR1cm4gY29sb3JcXG5cXG5cXG5pZiBub3Qg
cmVzdWx0cy5hbmFseXNpc19yZXBvcnRfc3RhdHVzOlxcbiAgICBub3RlVGV4dCA9IHVcXFwiXFxc
IlxcXCJTdWNjZXNzZnVsIHN1Ym1pdCAmbHQ7YiZndDt7fSZsdDsvYiZndDsgdG8gU05EQk9YIFBs
YXRmb3JtLiBIb3dldmVyIGl0IHdpbGwgdGFrZSB0aW1lIHRvIGdlbmVyYXRlIGFuIGFuYWx5c2lz
IHJlcG9ydCwgcGxlYXNlIHN1Ym1pdCBpdCBhZ2FpbiBsYXRlci4gJmx0O2JyJmd0O1xcXCJcXFwi
XFxcIi5mb3JtYXQoXFxuICAgICAgICBhcnRpZmFjdC52YWx1ZSlcXG5cXG5lbHNlOlxcbiAgICBu
b3RlVGV4dCA9IHVcXFwiXFxcIlxcXCJTdWNjZXNzZnVsIHN1Ym1pdCAmbHQ7YiZndDt7fSZsdDsv
YiZndDsgdG8gU05EQk9YIFBsYXRmb3JtLiBDaGVjayB0aGUgcmVzdWx0cyBiZWxvdzogJmx0O2Jy
Jmd0O1xcXCJcXFwiXFxcIi5mb3JtYXQoXFxuICAgICAgICBhcnRpZmFjdC52YWx1ZSlcXG5cXG4g
ICAgZm9yIHNhbXBsZSBpbiByZXN1bHRzLnNhbXBsZV9maW5hbF9yZXN1bHQ6XFxuICAgICAgICBu
b3RlVGV4dCArPSB1XFxcIlxcXCJcXFwiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cXFwiXFxcIlxcXCJcXG4gICAg
ICAgIGNvbG9yID0gZm9udF9jb2xvcihzYW1wbGVbXFxcInNhbXBsZV9yZXBvcnRcXFwiXVtcXFwi
c2NvcmVcXFwiXSlcXG4gICAgICAgIG5vdGVUZXh0ICs9IHVcXFwiXFxcIlxcXCImbHQ7YnImZ3Q7
U05EQk9YIFNhbmRib3ggQW5hbHlzaXM6ICZsdDtiJmd0O3tzYW1wbGVfZmlsZW5hbWV9Jmx0Oy9i
Jmd0OyBjb21wbGV0ZS4mbHQ7YnImZ3Q7XFxuICAgICAgICAgICAgICAgICAgIFNOREJPWCBPbmxp
bmUgQXR0YWNobWVudDogJmx0O2EgaHJlZj17c2FtcGxlX29ubGluZV9yZXBvcnR9Jmd0O3tzYW1w
bGVfb25saW5lX3JlcG9ydH0mbHQ7L2EmZ3Q7Jmx0O2JyJmd0O1xcbiAgICAgICAgICAgICAgICAg
ICBTTkRCT1ggQW5hbHl6ZXIgcmVzdWx0OiAgU2NvcmU6ICZsdDtiIHN0eWxlPSBcXFwiY29sb3I6
e2NvbG9yfVxcXCImZ3Q7e3NhbXBsZV9zY29yZX0mbHQ7L2ImZ3Q7ICZsdDticiZndDtcXG4gICAg
ICAgICAgICAgICBcXFwiXFxcIlxcXCIuZm9ybWF0KHNhbXBsZV9maWxlbmFtZT1zYW1wbGVbXFxc
InNhbXBsZV9yZXBvcnRcXFwiXVtcXFwibmFtZVxcXCJdLFxcbiAgICAgICAgICAgICAgICAgICAg
ICAgICAgc2FtcGxlX29ubGluZV9yZXBvcnQ9c2FtcGxlW1xcXCJzYW1wbGVfcmVwb3J0XFxcIl1b
XFxcInNhbXBsZV91cmxcXFwiXSxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yPWNv
bG9yLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc2FtcGxlX3Njb3JlPXNhbXBsZVtcXFwi
c2FtcGxlX3JlcG9ydFxcXCJdW1xcXCJzY29yZVxcXCJdKVxcblxcbmluY2lkZW50LmFkZE5vdGUo
aGVscGVyLmNyZWF0ZVJpY2hUZXh0KG5vdGVUZXh0KSlcIixcInByZV9wcm9jZXNzaW5nX3Njcmlw
dFwiOlwiaW5wdXRzLmluY2lkZW50X2lkID0gaW5jaWRlbnQuaWRcXG5pbnB1dHMuYXJ0aWZhY3Rf
aWQgPSBhcnRpZmFjdC5pZFwifTwvcmVzaWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVu
dHM+PGluY29taW5nPlNlcXVlbmNlRmxvd18xb2pva2M2PC9pbmNvbWluZz48b3V0Z29pbmc+U2Vx
dWVuY2VGbG93XzB5NW41ZmM8L291dGdvaW5nPjwvc2VydmljZVRhc2s+PHNlcXVlbmNlRmxvdyBp
ZD1cIlNlcXVlbmNlRmxvd18xb2pva2M2XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3ht
XCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMDVzenFyblwiLz48ZW5kRXZlbnQgaWQ9XCJFbmRF
dmVudF8waHJnYmU5XCI+PGluY29taW5nPlNlcXVlbmNlRmxvd18weTVuNWZjPC9pbmNvbWluZz48
L2VuZEV2ZW50PjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMHk1bjVmY1wiIHNvdXJj
ZVJlZj1cIlNlcnZpY2VUYXNrXzA1c3pxcm5cIiB0YXJnZXRSZWY9XCJFbmRFdmVudF8waHJnYmU5
XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIj48dGV4dD5T
dGFydCB5b3VyIHdvcmtmbG93IGhlcmU8L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRp
b24gaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVh
c3htXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiLz48dGV4dEFubm90YXRp
b24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xNXJuZWtoXCI+PHRleHQ+PCFbQ0RBVEFbUmVzdWx0IGlz
IGluY2lkZW50IG5vdGUgaXMgY3JlYXRlZCBjb250YWluaW5nIHRoZSByZXN1bHRzIG9mIGFuYWx5
c2lzXG5dXT48L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lh
dGlvbl8wcm11OHRhXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMDVzenFyblwiIHRhcmdldFJl
Zj1cIlRleHRBbm5vdGF0aW9uXzE1cm5la2hcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFu
bm90YXRpb25fMWxoOG9rOVwiPjx0ZXh0PjwhW0NEQVRBW2lucHV0czpcbjEuIGluY2lkZW50X2lk
IChyZXF1aXJlZClcbjIuIGFydGlmYWN0X2lkXG4zLiBhbmFseXNpc19yZXBvcnRfc3RhdHVzKFwi
Tm9cIiBieSBkZWZhdWx0KTogXCJZZXNcIiBmb3IgYW5hbHlzaXMgaGFzIGZpbmlzaGVkLCBcIk5v
XCIgZm9yIGFuYWx5c2lzIGhhcyBub3QgY29tcGxldGVkIHlldC5dXT48L3RleHQ+PC90ZXh0QW5u
b3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8xZGc0NXl0XCIgc291cmNlUmVm
PVwiU2VydmljZVRhc2tfMDVzenFyblwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFsaDhv
azlcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlhZ3JhbV8xXCI+
PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1cIkJQTU5QbGFu
ZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50XzE1NWFzeG1c
IiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZc
IiB3aWR0aD1cIjM2XCIgeD1cIjE2MlwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9t
Z2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIxNTdcIiB5PVwiMjIzXCIv
PjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUg
YnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0QW5ub3RhdGlv
bl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRoPVwiMTAwXCIg
eD1cIjk5XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBi
cG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29jaWF0aW9uXzFzZXVq
NDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE2OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRc
IiB5PVwiMjIwXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMTUzXCIgeHNpOnR5cGU9XCJvbWdkYzpQ
b2ludFwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBt
bkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18wNXN6cXJuXCIgaWQ9XCJTZXJ2aWNlVGFza18wNXN6cXJu
X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIgeD1cIjMxOFwi
IHk9XCIxNjZcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1l
bnQ9XCJTZXF1ZW5jZUZsb3dfMW9qb2tjNlwiIGlkPVwiU2VxdWVuY2VGbG93XzFvam9rYzZfZGlc
Ij48b21nZGk6d2F5cG9pbnQgeD1cIjE5OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwi
MjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMzE4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwi
IHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wi
IHdpZHRoPVwiMFwiIHg9XCIyNThcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2Jw
bW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzBo
cmdiZTlcIiBpZD1cIkVuZEV2ZW50XzBocmdiZTlfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1c
IjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI1ODRcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVs
PjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNjAyXCIgeT1cIjIy
N1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVk
Z2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMHk1bjVmY1wiIGlkPVwiU2VxdWVuY2VGbG93
XzB5NW41ZmNfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQxOFwiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNTg0XCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBo
ZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI1MDFcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQ
TU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1c
IlRleHRBbm5vdGF0aW9uXzE1cm5la2hcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzE1cm5la2hfZGlc
Ij48b21nZGM6Qm91bmRzIGhlaWdodD1cIjUxXCIgd2lkdGg9XCIzOTNcIiB4PVwiNDY1XCIgeT1c
IjM1XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwi
QXNzb2NpYXRpb25fMHJtdTh0YVwiIGlkPVwiQXNzb2NpYXRpb25fMHJtdTh0YV9kaVwiPjxvbWdk
aTp3YXlwb2ludCB4PVwiNDE4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxODFcIi8+
PG9tZ2RpOndheXBvaW50IHg9XCI2MTFcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjg2
XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4
dEFubm90YXRpb25fMWxoOG9rOVwiIGlkPVwiVGV4dEFubm90YXRpb25fMWxoOG9rOV9kaVwiPjxv
bWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTE0XCIgd2lkdGg9XCIyNzJcIiB4PVwiMTIyXCIgeT1cIi0z
OFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFz
c29jaWF0aW9uXzFkZzQ1eXRcIiBpZD1cIkFzc29jaWF0aW9uXzFkZzQ1eXRfZGlcIj48b21nZGk6
d2F5cG9pbnQgeD1cIjM0NFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTY2XCIvPjxv
bWdkaTp3YXlwb2ludCB4PVwiMjkxXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCI3Nlwi
Lz48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdy
YW0+PC9kZWZpbml0aW9ucz4iLCAid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9zbmRib3hfc2FuZGJv
eF9hbmFseXplcl9hcnRpZmFjdCIsICJ2ZXJzaW9uIjogN30sICJsYXN0X21vZGlmaWVkX3RpbWUi
OiAxNTU2ODQ0Mzk3MTUwLCAiY3JlYXRvcl9pZCI6ICJ0b21lckBzbmRib3guY29tIiwgImFjdGlv
bnMiOiBbXSwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfc25kYm94X3NhbmRib3hfYW5h
bHl6ZXJfYXJ0aWZhY3QiLCAibmFtZSI6ICJFeGFtcGxlOiBTTkRCT1ggU2FuZGJveCBBbmFseXpl
ciBbQXJ0aWZhY3RdIn1dLCAiYWN0aW9ucyI6IFt7ImxvZ2ljX3R5cGUiOiAiYW55IiwgIm5hbWUi
OiAiRXhhbXBsZTogU05EQk9YIFNhbmRib3ggQW5hbHl6ZXIgW0FydGlmYWN0XSIsICJ2aWV3X2l0
ZW1zIjogW10sICJ0eXBlIjogMSwgIndvcmtmbG93cyI6IFsiZXhhbXBsZV9zbmRib3hfc2FuZGJv
eF9hbmFseXplcl9hcnRpZmFjdCJdLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAidGltZW91
dF9zZWNvbmRzIjogODY0MDAsICJ1dWlkIjogImViMjA3OWViLWVhYmMtNGQyZC05ZTA0LTIxNTFk
YjBkN2M4YyIsICJhdXRvbWF0aW9ucyI6IFtdLCAiZXhwb3J0X2tleSI6ICJFeGFtcGxlOiBTTkRC
T1ggU2FuZGJveCBBbmFseXplciBbQXJ0aWZhY3RdIiwgImNvbmRpdGlvbnMiOiBbeyJ0eXBlIjog
bnVsbCwgImV2YWx1YXRpb25faWQiOiBudWxsLCAiZmllbGRfbmFtZSI6ICJhcnRpZmFjdC50eXBl
IiwgIm1ldGhvZCI6ICJlcXVhbHMiLCAidmFsdWUiOiAiTG9nIEZpbGUifSwgeyJ0eXBlIjogbnVs
bCwgImV2YWx1YXRpb25faWQiOiBudWxsLCAiZmllbGRfbmFtZSI6ICJhcnRpZmFjdC50eXBlIiwg
Im1ldGhvZCI6ICJlcXVhbHMiLCAidmFsdWUiOiAiT3RoZXIgRmlsZSJ9LCB7InR5cGUiOiBudWxs
LCAiZXZhbHVhdGlvbl9pZCI6IG51bGwsICJmaWVsZF9uYW1lIjogImFydGlmYWN0LnR5cGUiLCAi
bWV0aG9kIjogImVxdWFscyIsICJ2YWx1ZSI6ICJFbWFpbCBBdHRhY2htZW50In1dLCAiaWQiOiAx
NiwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW119LCB7ImxvZ2ljX3R5cGUiOiAiYWxsIiwgIm5h
bWUiOiAiRXhhbXBsZTogU05EQk9YIFNhbmRib3ggQW5hbHl6ZXIgW0F0dGFjaG1lbnRdIiwgInZp
ZXdfaXRlbXMiOiBbXSwgInR5cGUiOiAxLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX3NuZGJveF9z
YW5kYm94X2FuYWx5emVyX2F0dGFjaG1lbnQiXSwgIm9iamVjdF90eXBlIjogImF0dGFjaG1lbnQi
LCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ1dWlkIjogImE2ZWU0MzhhLTZlNGMtNDU5NC05
ZmMyLTM4MmVlNzJhNTBkNiIsICJhdXRvbWF0aW9ucyI6IFtdLCAiZXhwb3J0X2tleSI6ICJFeGFt
cGxlOiBTTkRCT1ggU2FuZGJveCBBbmFseXplciBbQXR0YWNobWVudF0iLCAiY29uZGl0aW9ucyI6
IFtdLCAiaWQiOiAxNywgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW119XSwgImxheW91dHMiOiBb
XSwgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6IDIsICJpZCI6IDExLCAiaW5kdXN0cmllcyI6IG51
bGwsICJwaGFzZXMiOiBbXSwgImFjdGlvbl9vcmRlciI6IFtdLCAiZ2VvcyI6IG51bGwsICJsb2Nh
bGUiOiBudWxsLCAic2VydmVyX3ZlcnNpb24iOiB7Im1ham9yIjogMzIsICJ2ZXJzaW9uIjogIjMy
LjAuNDUwMiIsICJidWlsZF9udW1iZXIiOiA0NTAyLCAibWlub3IiOiAwfSwgInRpbWVmcmFtZXMi
OiBudWxsLCAid29ya3NwYWNlcyI6IFtdLCAiYXV0b21hdGljX3Rhc2tzIjogW10sICJmdW5jdGlv
bnMiOiBbeyJkaXNwbGF5X25hbWUiOiAiU05EQk9YIFNhbmRib3ggQW5hbHl6ZXIiLCAiZGVzY3Jp
cHRpb24iOiB7ImNvbnRlbnQiOiAiQW5hbHl6ZSBhbiBhdHRhY2htZW50IG9yIGFydGlmYWN0IGZp
bGUgZm9yIG1hbHdhcmUgdXNpbmcgU05EQk9YIHBsYXRmb3JtLiIsICJmb3JtYXQiOiAidGV4dCJ9
LCAiY3JlYXRvciI6IHsiZGlzcGxheV9uYW1lIjogIlJlc2lsaWVudCBTeXNhZG1pbiIsICJ0eXBl
IjogInVzZXIiLCAiaWQiOiAyLCAibmFtZSI6ICJ0b21lckBzbmRib3guY29tIn0sICJ2aWV3X2l0
ZW1zIjogW3sic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hv
d19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQi
OiAiZWFkMjE0YzItMTNmZS00M2Y2LWEzYzctNjc2YTg4MzM4ZGJiIiwgInN0ZXBfbGFiZWwiOiBu
dWxsfSwgeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93
X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6
ICJlZmRiY2E3ZS02YWU4LTQyNjktYTNkMS04MGYxNzE2YTYyMjIiLCAic3RlcF9sYWJlbCI6IG51
bGx9LCB7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3df
bGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50Ijog
IjE3YzNlNjUyLTY1NTktNDkzNS05Zjk1LTc0Mzc0Y2EzN2E3YiIsICJzdGVwX2xhYmVsIjogbnVs
bH0sIHsic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19s
aW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAi
Y2E3ZGUxZTMtZmVlOC00M2JlLWIxNTEtYTZjOWRiMDYwMjQ4IiwgInN0ZXBfbGFiZWwiOiBudWxs
fV0sICJleHBvcnRfa2V5IjogImZuX3NuZGJveF9zYW5kYm94X2FuYWx5emVyIiwgInV1aWQiOiAi
YzExYzQ5YjgtZTU3NC00OWU2LTgzOTktNWQ1MWJkNmJiMmQyIiwgImxhc3RfbW9kaWZpZWRfYnki
OiB7ImRpc3BsYXlfbmFtZSI6ICJSZXNpbGllbnQgU3lzYWRtaW4iLCAidHlwZSI6ICJ1c2VyIiwg
ImlkIjogMiwgIm5hbWUiOiAidG9tZXJAc25kYm94LmNvbSJ9LCAidmVyc2lvbiI6IDEsICJ3b3Jr
Zmxvd3MiOiBbeyJkZXNjcmlwdGlvbiI6IG51bGwsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIs
ICJhY3Rpb25zIjogW10sICJuYW1lIjogIkV4YW1wbGU6IFNOREJPWCBTYW5kYm94IEFuYWx5emVy
IFtBcnRpZmFjdF0iLCAid29ya2Zsb3dfaWQiOiAzLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhh
bXBsZV9zbmRib3hfc2FuZGJveF9hbmFseXplcl9hcnRpZmFjdCIsICJ1dWlkIjogbnVsbH0sIHsi
ZGVzY3JpcHRpb24iOiBudWxsLCAib2JqZWN0X3R5cGUiOiAiYXR0YWNobWVudCIsICJhY3Rpb25z
IjogW10sICJuYW1lIjogIkV4YW1wbGU6IFNOREJPWCBTYW5kYm94IEFuYWx5emVyIFtBdHRhY2ht
ZW50XSIsICJ3b3JrZmxvd19pZCI6IDQsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3Nu
ZGJveF9zYW5kYm94X2FuYWx5emVyX2F0dGFjaG1lbnQiLCAidXVpZCI6IG51bGx9XSwgImxhc3Rf
bW9kaWZpZWRfdGltZSI6IDE1NTY4MDEyMjQ3OTIsICJkZXN0aW5hdGlvbl9oYW5kbGUiOiAic25k
Ym94X3NhbmRib3hfbWVzc2FnZV9kZXN0aW5hdGlvbiIsICJpZCI6IDIsICJuYW1lIjogImZuX3Nu
ZGJveF9zYW5kYm94X2FuYWx5emVyIn1dLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJyZWd1bGF0
b3JzIjogbnVsbCwgImluY2lkZW50X3R5cGVzIjogW3siY3JlYXRlX2RhdGUiOiAxNTU3MjI3NTUx
MzA3LCAiZGVzY3JpcHRpb24iOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwg
ImV4cG9ydF9rZXkiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImlkIjog
MCwgIm5hbWUiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgInVwZGF0ZV9k
YXRlIjogMTU1NzIyNzU1MTMwNywgInV1aWQiOiAiYmZlZWMyZDQtMzc3MC0xMWU4LWFkMzktNGEw
MDA0MDQ0YWEwIiwgImVuYWJsZWQiOiBmYWxzZSwgInN5c3RlbSI6IGZhbHNlLCAicGFyZW50X2lk
IjogbnVsbCwgImhpZGRlbiI6IGZhbHNlfV0sICJzY3JpcHRzIjogW10sICJ0eXBlcyI6IFtdLCAi
bWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbeyJ1dWlkIjogImNjZjhkNjJlLWM0N2YtNDU0Mi04YWEw
LWI2MWU5OGQ5YWI2OSIsICJleHBvcnRfa2V5IjogInNuZGJveF9zYW5kYm94X21lc3NhZ2VfZGVz
dGluYXRpb24iLCAibmFtZSI6ICJTTkRCT1ggU2FuZGJveCBNZXNzYWdlIERlc3RpbmF0aW9uIiwg
ImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAicHJvZ3JhbW1hdGljX25hbWUiOiAic25kYm94X3NhbmRi
b3hfbWVzc2FnZV9kZXN0aW5hdGlvbiIsICJleHBlY3RfYWNrIjogdHJ1ZSwgInVzZXJzIjogWyJ0
b21lckBzbmRib3guY29tIl19XSwgImluY2lkZW50X2FydGlmYWN0X3R5cGVzIjogW10sICJyb2xl
cyI6IFtdLCAiZmllbGRzIjogW3sib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDAsICJvcGVy
YXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAiU2ltdWxhdGlvbiIsICJibGFua19vcHRpb24iOiBm
YWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogNTksICJyZWFk
X29ubHkiOiB0cnVlLCAidXVpZCI6ICJjM2YwZTNlZC0yMWUxLTRkNTMtYWZmYi1mZTVjYTMzMDhj
Y2EiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAidG9vbHRpcCI6
ICJXaGV0aGVyIHRoZSBpbmNpZGVudCBpcyBhIHNpbXVsYXRpb24gb3IgYSByZWd1bGFyIGluY2lk
ZW50LiAgVGhpcyBmaWVsZCBpcyByZWFkLW9ubHkuIiwgImludGVybmFsIjogZmFsc2UsICJyaWNo
X3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9p
bmNfdHJhaW5pbmciLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgIm5hbWUiOiAiaW5jX3Ry
YWluaW5nIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6
IGZhbHNlLCAidmFsdWVzIjogW119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwg
Im9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJhcnRpZmFjdF9pZCIsICJibGFua19vcHRp
b24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMTUy
LCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogImVmZGJjYTdlLTZhZTgtNDI2OS1hM2QxLTgw
ZjE3MTZhNjIyMiIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAibnVtYmVyIiwgInRv
b2x0aXAiOiAidGhlIGlkIG9mIHRoZSBhcnRpZmFjdCBvYmplY3QiLCAiaW50ZXJuYWwiOiBmYWxz
ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogIl9f
ZnVuY3Rpb24vYXJ0aWZhY3RfaWQiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNl
aG9sZGVyIjogIiIsICJuYW1lIjogImFydGlmYWN0X2lkIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwg
ImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW119LCB7Im9wZXJh
dGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6
ICJpbmNpZGVudF9pZCIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJj
aGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMTUwLCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjog
ImVhZDIxNGMyLTEzZmUtNDNmNi1hM2M3LTY3NmE4ODMzOGRiYiIsICJjaG9zZW4iOiBmYWxzZSwg
ImlucHV0X3R5cGUiOiAibnVtYmVyIiwgInRvb2x0aXAiOiAidGhlIGlkIG9mIHRoZSBpbmNpZGVu
dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBb
XSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9pbmNpZGVudF9pZCIsICJoaWRlX25vdGlmaWNh
dGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAiaW5jaWRlbnRfaWQiLCAi
ZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJy
ZXF1aXJlZCI6ICJhbHdheXMiLCAidmFsdWVzIjogW119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5
cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJhbmFseXNpc19yZXBv
cnRfc3RhdHVzIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5n
ZWFibGUiOiB0cnVlLCAiaWQiOiAxNTMsICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAiY2E3
ZGUxZTMtZmVlOC00M2JlLWIxNTEtYTZjOWRiMDYwMjQ4IiwgImNob3NlbiI6IGZhbHNlLCAiaW5w
dXRfdHlwZSI6ICJib29sZWFuIiwgInRvb2x0aXAiOiAidGhlIGFuYWx5c2lzIHJlcG9ydCBoYXMg
Z2VuZXJhdGVkPyAgVHVyZSBvciBGYWxzZSIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0
IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9hbmFs
eXNpc19yZXBvcnRfc3RhdHVzIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhv
bGRlciI6ICIiLCAibmFtZSI6ICJhbmFseXNpc19yZXBvcnRfc3RhdHVzIiwgImRlcHJlY2F0ZWQi
OiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW119
LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9
LCAidGV4dCI6ICJhdHRhY2htZW50X2lkIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4
IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAxNTEsICJyZWFkX29ubHkiOiBmYWxz
ZSwgInV1aWQiOiAiMTdjM2U2NTItNjU1OS00OTM1LTlmOTUtNzQzNzRjYTM3YTdiIiwgImNob3Nl
biI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAidG9vbHRpcCI6ICJ0aGUgaWQgb2Yg
dGhlIGF0dGFjaG1lbnQiLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAi
dGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vYXR0YWNobWVudF9pZCIs
ICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAi
YXR0YWNobWVudF9pZCIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9z
ZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdfV0sICJvdmVycmlkZXMiOiBbXSwgImV4cG9ydF9k
YXRlIjogMTU1Njg0NDQ3NTM3OX0=
"""
    )